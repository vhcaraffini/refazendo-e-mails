import os
import win32com.client as win32
from tkinter import filedialog
import tkinter as tk
import pandas as pd
import datetime
import locale

# Definir a localização para português do Brasil
locale.setlocale(locale.LC_ALL, 'pt_BR.UTF-8')

# Obter o nome do mês atual e o número do ano
nome_mes_atual = datetime.datetime.now().strftime('%B')
ano_atual = datetime.datetime.now().strftime('%Y')
mes_atual = datetime.datetime.now().month

# Datas habituais de vencimento para não enviar email
datas_habituais = [f'01/{mes_atual}/{ano_atual}', f'10/{mes_atual}/{ano_atual}', 
                   f'15/{mes_atual}/{ano_atual}', f'18/{mes_atual}/{ano_atual}',
                   f'23/{mes_atual}/{ano_atual}', f'20/{mes_atual}/{ano_atual}',]

# Função para formatar o número como moeda brasileira
def ponto_para_virgula(valor):
    try:
        # Formatar como moeda com separador de milhar e duas casas decimais
        valor_formatado = locale.currency(valor, grouping=True, symbol=False)
        # Remover o símbolo da moeda (R$), deixando só o valor
        return valor_formatado.replace('R$', '').strip()
    except Exception as e:
        print(f"Erro ao formatar valor: {str(e)}")
        return str(valor)

def enviar_email_cobranca_avulsa():
    # Configurar janela para seleção de arquivo
    root = tk.Tk()
    root.withdraw()
    
    try:
        # Selecionar arquivo Excel
        CAMINHO_EXCEL = filedialog.askopenfilename(initialdir="/", title="Selecione um arquivo", filetypes=(("Arquivos do Excel", ".xlsx"), ("Todos os arquivos", ".*")))
        CAMINHO_IMAGEM = f'{os.path.dirname(os.path.dirname(os.path.realpath(_file_)))}/arquivos/Assinatura.png'

        # Verificar se imagem existe
        if not os.path.exists(CAMINHO_IMAGEM):
            raise FileNotFoundError("Imagem de assinatura não encontrada.")

        # Abrindo abas do Excel
        df1 = pd.read_excel(CAMINHO_EXCEL, sheet_name='COBRANÇA_AVULSA')
        df2 = pd.read_excel(CAMINHO_EXCEL, sheet_name=f'MAILING')

        # Envio de emails
        for i, mutuario_plan1 in enumerate(df1['Mutuário']):
            plano = df1.loc[i, 'Plano']
            data_vencimento = df1.loc[i, 'Vencimento'].strftime("%d/%m/%Y")
            valor_parcela = ponto_para_virgula(df1.loc[i, 'Total em R$'])

            # Verificar se a data de vencimento está nas datas habituais
            if data_vencimento in datas_habituais:
                continue

            # Criar a instância do Outlook
            outlook = win32.Dispatch('outlook.application')
            email = outlook.CreateItem(0)

            # Obter email do destinatário
            email_a_enviar = df2.loc[df2['MUTUARIOS'] == mutuario_plan1, 'E-MAIL'].values
            if not email_a_enviar:
                print(f"Email não encontrado para {mutuario_plan1}")
                continue

            email.To = email_a_enviar[0]
            email.Subject = f'VENCIMENTO {mutuario_plan1} {data_vencimento}'
            email.BodyFormat = 2

            # Substituir os valores no corpo do email HTML
            corpo_email = df1.loc[0, 'CORPO EMAIL HTML'].format(
                MUTUARIO=mutuario_plan1,
                PLANO=plano,
                DATA_VENCIMENTO=data_vencimento,
                VALOR_PARCELA=valor_parcela,
            )
            email.HTMLBody = corpo_email.replace('<body>', '<body><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">')

            # Anexar a imagem de assinatura
            try:
                attachment = email.Attachments.Add(CAMINHO_IMAGEM)
                attachment.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/proptag/0x3712001F", "minhaassinatura")
            except Exception as e:
                print(f"Erro ao anexar imagem: {str(e)}")

            # Enviando em nome de:
            email.SentOnBehalfOfName = 'secob.pr@brde.com.br'
            email.Send()
            print(f"Email enviado para {mutuario_plan1}")

        # Fechar instância do Outlook
        outlook.Quit()
    except Exception as e:
        print(f"Erro: {str(e)}")
